name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare build environment
      run: ./scripts/prepare_runner.sh
    - name: Build
      run: ./scripts/docker_brun.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: Dongle${{ github.run_id }}${{ github.run_attempt }}
        release_name: Release ${{ github.sha }}
        body: |
          Contents of this release:
          * boot.img - boot Image
          * root.img - Non Sparse Image
          * rootfs.img - Sparse Image
        draft: false
        prerelease: false
    - name: Upload Release Asset boot.img
      id: upload-release-asset-debian
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./boot.img
        asset_name: boot.img
        asset_content_type: application/img
    - name: Upload Release Asset root.img
      id: upload-release-asset-debian
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./root.img
        asset_name: root.img
        asset_content_type: application/img
    - name: Upload Release Asset rootfs.img
      id: upload-release-asset-debian
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./rootfs.img
        asset_name: rootfs.img
        asset_content_type: application/img
    